{"version":3,"sources":["serviceWorker.js","Posts.js","Settings.js","NavBar.js","BlogInfo.js","Home.js","Blog.js","Categories.js","index.js"],"names":["Boolean","window","location","hostname","match","Posts","path","fileName","title","date","category","summary","Settings","home","blogPrefix","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","_this2","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","history","push","React","Component","withRouter","BlogInfo","post","style","width","Home","src_NavBar","map","src_BlogInfo","Blog","markdown","url","fetch","then","response","text","setState","align","react_markdown_default","source","escapeHtml","Categories","renderOneCategory","bind","assertThisInitialized","numOfPosts","padding-bottom","ReactDOM","render","BrowserRouter","Switch","Route","key","exact","component","src_Blog_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.240704b3.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const Posts = [\n    {\n        \"path\": \"/landscape-image-clustering\",\n        \"fileName\": \"Landscape-Image-Clustering.md\",\n        \"title\": \"Landscape Image Clustering based on Color Histogram\",\n        \"date\": \"September 16, 2018\",\n        \"category\": \"Image Processing\",\n        \"summary\": \"My original thought about this project is to cluster the landscape images by their colors. I developed a web crawler to download 8892 landscape photos from mob.org. \\nHowever, I ran up against difficulty in extracting the color features from the images.\"\n    },\n    {\n        \"path\": \"/text-co-occurrence-network\",\n        \"fileName\": \"Text-Co-occurrence-Network.md\",\n        \"title\": \"Text Co-occurrence Network Analysis for The Hunger Games\",\n        \"date\": \"September 08, 2018\",\n        \"category\": \"Natural Language Processing\",\n        \"summary\": \"I am a fan of The Hunger Games, and I have read all the three books. The story of The Hunger Games is narrated by the young girl, Katniss Everdeen. There are many characters in the story, and what I am going to do is to describe the connections between the characters from a data science perspective.\"\n    }\n];\nexport default Posts;\n","const Settings = {\n    home: \"/blog\",\n    blogPrefix: \"https://raw.githubusercontent.com/YanjieHe/blog/master/posts/\"\n};\n\nexport default Settings;","import React from 'react'\nimport {withRouter} from \"react-router-dom\";\nimport Settings from './Settings.js'\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: props.currentPage\n        }\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\"\n                        aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className={this.state.currentPage === \"Home\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\" onClick={() => this.props.history.push(Settings.home)}>Home <span\n                                className=\"sr-only\">(current)</span></span>\n                        </li>\n                        <li className={this.state.currentPage === \"Categories\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\"\n                                  onClick={() => this.props.history.push(Settings.home + \"/categories\")}>Categories</span>\n                        </li>\n                        <li className={this.state.currentPage === \"Tags\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\"\n                                  onClick={() => this.props.history.push(Settings.home + \"/tags\")}>Tags</span>\n                        </li>\n                        <li className={this.state.currentPage === \"About\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\"\n                                  onClick={() => this.props.history.push(Settings.home + \"/about\")}>About</span>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default withRouter(NavBar)","import React from 'react'\n\nimport {withRouter} from \"react-router-dom\";\nclass BlogInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            path: props.post.path,\n            title: props.post.title,\n            date: props.post.date,\n            summary: props.post.summary\n        }\n    }\n\n    render() {\n        return <div className=\"shadow p-3 mb-5 bg-white rounded\" style={{\"width\": \"100%\"}}>\n            <h5>\n                <span onClick={() => this.props.history.push(\"/blog\" + this.state.path)}>\n                    {this.state.title}\n                </span>\n                <span className=\"badge badge-info\" id=\"date-badge\">{this.state.date}</span></h5>\n            <hr/>\n            <p>{this.state.summary}</p>\n        </div>\n    }\n}\n\nexport default withRouter(BlogInfo)","import React from 'react'\nimport Posts from './Posts.js'\nimport './Home.css'\nimport NavBar from './NavBar.js'\nimport BlogInfo from './BlogInfo.js'\nimport Settings from './Settings.js'\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Home\"/>\n            {Posts.map(post => <BlogInfo post={post}/>)}\n        </div>\n    }\n}\n\nexport default Home","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport './Blog.css'\nimport NavBar from \"./NavBar.js\";\nimport Settings from './Settings.js'\n\n\nclass Blog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            markdown: \"\",\n            title: props.post.title,\n            date: props.post.date,\n            fileName: props.post.fileName\n        }\n    }\n\n    componentDidMount() {\n        const url = Settings.blogPrefix + this.state.fileName\n        fetch(url)\n            .then(response => response.text())\n            .then(\n                text => this.setState({markdown: text})\n            )\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Home\"/>\n            <div className=\"shadow p-3 mb-5 bg-white rounded\">\n                <h3 className=\"mt-4\">{this.state.title}</h3>\n                <p align=\"right\">Posted on {this.state.date}</p>\n                <ReactMarkdown source={this.state.markdown}\n                               escapeHtml={false}/>\n            </div>\n        </div>\n    }\n}\n\nexport default Blog","import React from 'react'\nimport NavBar from './NavBar.js'\nimport Posts from \"./Posts\";\nimport BlogInfo from './BlogInfo.js'\n\nclass Categories extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderOneCategory = this.renderOneCategory.bind(this)\n    }\n\n    renderOneCategory(category, numOfPosts) {\n        return <li className=\"list-group-item d-flex justify-content-between align-items-center\">\n            {category}\n            <span className=\"badge badge-primary badge-pill\">{numOfPosts}</span>\n        </li>\n    }\n\n    renderBlog(path, title, date, summary) {\n        return <div className=\"shadow p-3 mb-5 bg-white rounded\" style={{\"width\": \"100%\"}}>\n            <h5>\n                <span onClick={() => this.props.history.push(\"/blog\" + path)}>\n                    {title}\n                </span>\n                <span className=\"badge badge-info\" id=\"date-badge\">{date}</span></h5>\n            <hr/>\n            <p>{summary}</p>\n        </div>\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Categories\"/>\n            <div className=\"row\">\n                <div className=\"col-xs-10 col-sm-3\" style={{\"padding-bottom\": \"50px\"}}>\n                    <ul className=\"list-group\">\n                        {this.renderOneCategory(\"C++\", 90)}\n                        {this.renderOneCategory(\"Arts\", 30)}\n                        {this.renderOneCategory(\"Machine Learning\", 5)}\n                    </ul>\n                </div>\n                <div className=\"col-xs-10 col-sm-7\">\n                    {Posts.map(post => <BlogInfo post={post}/>)}\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default Categories","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home.js'\nimport \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport './bootstrap.css'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Blog from './Blog.js'\nimport Posts from './Posts.js'\nimport Categories from \"./Categories.js\";\nimport Settings from './Settings.js'\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route key=\"/\" path={Settings.home} exact component={Home}/>\n            <Route key=\"/categories\" path={Settings.home + \"/categories\"} exact component={Categories}/>\n            {\n                Posts.map(post => <Route key={post.path} path={Settings.home + post.path} exact\n                                         component={() => <Blog post={post}/>}/>)\n            }\n        </Switch>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}