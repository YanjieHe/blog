{"version":3,"sources":["serviceWorker.js","Posts.js","NavBar.js","BlogInfo.js","Home.js","Settings.js","Blog.js","Categories.js","Tags.js","About.js","index.js"],"names":["Boolean","window","location","hostname","match","Posts","path","fileName","title","date","category","tags","summary","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","pageName","activation","react_default","a","createElement","className","onClick","createHashHistory","push","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","renderNavItem","React","Component","BlogInfo","post","_this2","tagsInfo","map","tag","key","style","width","Home","src_NavBar","src_BlogInfo","Settings","blogPrefix","Blog","markdown","url","fetch","then","response","text","setState","align","dangerouslySetInnerHTML","__html","Categories","renderOneCategory","bind","assertThisInitialized","categories","collectCategories","numOfPosts","_this3","paddingBottom","keys","i","length","Tags","renderOneTag","handleInputChange","renderPosts","collectTags","tagList","makeTagList","event","anyTagSelected","items","_this4","j","About","ReactDOM","render","HashRouter","Switch","Route","exact","component","src_Blog_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e69a22a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const Posts = [\n    {\n        \"path\": \"/a-content-based-movie-recommender-system\",\n        \"fileName\": \"A-Content-based-Movie-Recommender-System.html\",\n        \"title\": \"A Content-based Movie Recommender System\",\n        \"date\": \"December 24, 2018\",\n        \"category\": \"Recommender System\",\n        \"tags\": [\"Recommender System\", \"Image Processing\", \"Audio Processing\", \"Social Network Analysis\"],\n        \"summary\": \"I built a content-based movie recommender system. The system only utilizing the content of movies themselves, which solves the cold-start problem. The challenge is how to extract meaningful information from the movies? \"\n    },\n    {\n        \"path\": \"/landscape-image-clustering\",\n        \"fileName\": \"Landscape-Image-Clustering.html\",\n        \"title\": \"Landscape Image Clustering based on Color Histogram\",\n        \"date\": \"September 16, 2018\",\n        \"category\": \"Image Processing\",\n        \"tags\": [\"Image Processing\", \"Clustering\"],\n        \"summary\": \"My original thought about this project is to cluster the landscape images by their colors. I developed a web crawler to download 8892 landscape photos from mob.org. \\nHowever, I ran up against difficulty in extracting the color features from the images.\"\n    },\n    {\n        \"path\": \"/text-co-occurrence-network\",\n        \"fileName\": \"Text-Co-occurrence-Network.html\",\n        \"title\": \"Text Co-occurrence Network Analysis for The Hunger Games\",\n        \"date\": \"September 08, 2018\",\n        \"category\": \"Natural Language Processing\",\n        \"tags\": [\"Natural Language Processing\", \"Social Network Analysis\"],\n        \"summary\": \"I am a fan of The Hunger Games, and I have read all the three books. The story of The Hunger Games is narrated by the young girl, Katniss Everdeen. There are many characters in the story, and what I am going to do is to describe the connections between the characters from a data science perspective.\"\n    }\n];\nexport default Posts;\n","import React from 'react'\nimport {createHashHistory} from 'history'\nimport './MousePointer.css'\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: props.currentPage\n        };\n    }\n\n    renderNavItem(pageName, path) {\n        let activation = this.state.currentPage === pageName ? \"nav-item active\" : \"nav-item\";\n        return (<li className={activation}>\n            <span className=\"nav-link pointer\"\n                  onClick={() => createHashHistory().push(path)}>{pageName}</span>\n        </li>);\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\"\n                        aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        {this.renderNavItem(\"Home\", \"/\")}\n                        {this.renderNavItem(\"Categories\", \"/categories\")}\n                        {this.renderNavItem(\"Tags\", \"/tags\")}\n                        {this.renderNavItem(\"About\", \"/about\")}\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default NavBar","import React from 'react'\nimport {createHashHistory} from 'history'\n// import './BlogInfo.css'\nimport './MousePointer.css'\n\nclass BlogInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            path: props.post.path,\n            title: props.post.title,\n            date: props.post.date,\n            summary: props.post.summary,\n            category: props.post.category,\n            tags: props.post.tags\n        }\n    }\n\n    render() {\n        let tagsInfo = this.state.tags.map(tag =>\n            <span key={tag}><span className=\"badge badge-pill badge-secondary\"\n                                  key={tag}>{tag}</span>&nbsp;&nbsp;</span>\n        );\n        return <div className=\"shadow p-3 mb-5 bg-white rounded\" style={{\"width\": \"100%\"}}>\n            <h5>\n                <span className=\"pointer\" onClick={() => createHashHistory().push(this.state.path)}>\n                    {this.state.title}\n                </span>\n                <span className=\"badge badge-info\" id=\"date-badge\">{this.state.date}</span></h5>\n            <hr/>\n            <p onClick={() => createHashHistory().push(this.state.path)}>{this.state.summary}</p>\n            <span>{tagsInfo}</span>\n        </div>\n    }\n}\n\nexport default BlogInfo","import React from 'react'\nimport Posts from './Posts.js'\nimport './Home.css'\nimport NavBar from './NavBar.js'\nimport BlogInfo from './BlogInfo.js'\n\nclass Home extends React.Component {\n    render() {\n        return <div>\n            <NavBar currentPage=\"Home\"/>\n            {Posts.map(post => <BlogInfo key={post.path} post={post}/>)}\n        </div>\n    }\n}\n\nexport default Home","const Settings = {\n    blogPrefix: \"https://raw.githubusercontent.com/YanjieHe/blog/master/posts/\"\n};\n\nexport default Settings;","import React from 'react'\nimport './Blog.css'\nimport NavBar from \"./NavBar.js\";\nimport Settings from './Settings.js'\n\n\nclass Blog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            markdown: \"\",\n            title: props.post.title,\n            date: props.post.date,\n            fileName: props.post.fileName\n        }\n    }\n\n    componentDidMount() {\n        const url = Settings.blogPrefix + this.state.fileName\n        fetch(url)\n            .then(response => response.text())\n            .then(\n                text => this.setState({markdown: text})\n            )\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Home\"/>\n            <div className=\"shadow p-3 mb-5 bg-white rounded\">\n                <h3 className=\"mt-4\">{this.state.title}</h3>\n                <p align=\"right\">Posted on {this.state.date}</p>\n                <div dangerouslySetInnerHTML={{__html: this.state.markdown}}/>\n                {/*<ReactMarkdown source={this.state.markdown}*/}\n                {/*escapeHtml={false}/>*/}\n            </div>\n        </div>\n    }\n}\n\nexport default Blog","import React from 'react'\nimport NavBar from './NavBar.js'\nimport Posts from \"./Posts\";\nimport BlogInfo from './BlogInfo.js'\nimport './MousePointer.css'\n\n\nclass Categories extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderOneCategory = this.renderOneCategory.bind(this);\n        this.state = {\n            categories: Categories.collectCategories(),\n            category: \"\"\n        }\n    }\n\n    static collectCategories() {\n        let categories = {};\n        for (let i = 0; i < Posts.length; i++) {\n            let category = Posts[i].category;\n            if (category in categories) {\n                categories[category] += 1\n            } else {\n                categories[category] = 1\n            }\n        }\n        return categories\n    }\n\n    renderOneCategory(category, numOfPosts) {\n        let activation = \"pointer list-group-item d-flex justify-content-between align-items-center \" +\n            (category === this.state.category ? \"active\" : \"\");\n        return <li key={category} className={activation}\n                   onClick={() => this.setState({category: category})}>\n            {category}\n            <span className=\"badge badge-primary badge-pill\">{numOfPosts}</span>\n        </li>\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Categories\"/>\n            <div className=\"row\">\n                <div className=\"col-xs-10 col-sm-3\" style={{\"paddingBottom\": \"50px\"}}>\n                    <ul className=\"list-group\">\n                        {Object.keys(this.state.categories)\n                            .map(category =>\n                                this.renderOneCategory(category, this.state.categories[category]))}\n                    </ul>\n                </div>\n                <div className=\"col-xs-10 col-sm-9\">\n                    {Posts.map(post => {\n                        if (this.state.category === \"\") {\n                            return <BlogInfo key={post.path} post={post}/>\n                        } else if (this.state.category === post.category) {\n                            return <BlogInfo key={post.path} post={post}/>\n                        } else {\n                            return <span></span>\n                        }\n                    })}\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default Categories","import React from 'react'\nimport NavBar from \"./NavBar.js\";\nimport Posts from \"./Posts.js\";\nimport BlogInfo from './BlogInfo.js'\nimport './MousePointer.css';\n\n\nclass Tags extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderOneTag = this.renderOneTag.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.renderPosts = this.renderPosts.bind(this);\n        this.state = {\n            tags: Tags.collectTags(),\n            tagList: Tags.makeTagList(Tags.collectTags()),\n            tag: \"\"\n        }\n    }\n\n    static collectTags() {\n        let tags = {};\n        for (let i = 0; i < Posts.length; i++) {\n            let items = Posts[i].tags;\n            for (let j = 0; j < items.length; j++) {\n                let tag = items[j];\n                if (tag in tags) {\n                    tags[tag] += 1\n                } else {\n                    tags[tag] = 1\n                }\n            }\n        }\n        return tags;\n    }\n\n    static makeTagList(tags) {\n        let tagList = {};\n        let keys = Object.keys(tags);\n        for (let i = 0; i < keys.length; i++) {\n            let tag = keys[i];\n            tagList[tag] = false;\n        }\n        return tagList;\n    }\n\n    handleInputChange(tag) {\n        const tagList = this.state.tagList\n        tagList[tag] = !tagList[tag]\n        this.setState({tagList: tagList});\n    }\n\n    renderOneTag(tag, numOfPosts) {\n        return <span className=\"pointer\" key={tag}><span\n            className={this.state.tagList[tag] ? \"badge badge-pill badge-success\" : \"badge badge-pill badge-secondary\"}\n            key={tag}\n            onClick={(event) => this.handleInputChange(tag)}>{tag}</span>&nbsp;&nbsp;</span>\n    }\n\n    renderPosts() {\n        let anyTagSelected = () => {\n            let keys = Object.keys(this.state.tagList);\n            for (let i = 0; i < keys.length; i++) {\n                if (this.state.tagList[keys[i]]) {\n                    return true;\n                }\n            }\n            return false;\n        };\n        if (anyTagSelected()) {\n            return Posts.map(post => {\n                var items = post.tags\n                for (var i = 0; i < items.length; i++) {\n                    if (this.state.tagList[items[i]]) {\n                        return <BlogInfo key={post.path} post={post}/>\n                    }\n                }\n                return <span key={post.path}></span>\n            })\n        } else {\n            return Posts.map(post => {\n                return <BlogInfo key={post.path} post={post}/>\n            })\n        }\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Tags\"/>\n            <div className=\"row\">\n                <div className=\"col-xs-10 col-sm-3\" style={{\"paddingBottom\": \"50px\"}}>\n                    <div className=\"form-group\">\n                        {Object.keys(this.state.tags)\n                            .map(tag =>\n                                this.renderOneTag(tag, this.state.tags[tag]))}\n                    </div>\n                </div>\n                <div className=\"col-xs-10 col-sm-9\">\n                    {this.renderPosts()}\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default Tags","import React from 'react'\nimport NavBar from './NavBar.js'\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div>\n                <NavBar currentPage=\"About\"/>\n                <h3>Welcome to my website!</h3>\n                <br/>\n                <p>I am Yanjie He, a Data Scientist who is interested in computer science, statistics, and economics.\n                    Currently, I am studying at the Data Analytics program at the George Washington University.</p>\n\n                <p>I have experience in both academic and industry. My first internship is in Kantar Media CIC, which is\n                    a\n                    company focusing on social media data analysis. That experience was super fun. I developed a text\n                    mining\n                    system with team members and designed a sentimental analysis solution. Also, I provided a data\n                    visualization solution, which is to plot a Venn graph automatically based on given data.</p>\n\n                <p>After I came to the United States, I got an on-campus job in the George Washington University. I am\n                    working as a computational social scientist, and what I do in every week is to help Professor\n                    Pamphile\n                    with her research work. It is an excellent opportunity for me to apply my analytical skills to solve\n                    academic problems.</p>\n\n                <p>I am a team member in Professor Benjamin Harvey's A.I. project. I am developing a recommender system\n                    with the joint effort of team members. From this experience, I learned the process of system\n                    development. There are still a lot learn, and it will be inspiring to me.</p>\n            </div>\n        );\n    }\n}\n\nexport default About","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home.js'\nimport \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport './bootstrap.css'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport Blog from './Blog.js'\nimport Posts from './Posts.js'\nimport Categories from \"./Categories.js\";\nimport Tags from './Tags.js'\nimport About from './About.js'\n\nReactDOM.render(\n    <HashRouter>\n        <Switch>\n            <Route key=\"/\" path={\"/\"} exact component={Home}/>\n            <Route key=\"/categories\" path={\"/categories\"} exact component={Categories}/>\n            <Route key=\"/tags\" path={\"/tags\"} exact component={Tags}/>\n            <Route key=\"/about\" path={\"/about\"} exact component={About}/>\n            {\n                Posts.map(post => <Route key={post.path} path={post.path} exact\n                                         component={() => <Blog post={post}/>}/>)\n            }\n        </Switch>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}