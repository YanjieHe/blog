{"version":3,"sources":["App.js","serviceWorker.js","Posts.js","Home.js","Blog.js","index.js","logo.svg","posts/README.md","posts/Landscape-Image-Clustering.md"],"names":["Component","Boolean","window","location","hostname","match","Posts","path","title","date","source","require","summary","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderBlog","bind","assertThisInitialized","_this2","react_default","a","createElement","className","onClick","history","push","class","id","_this3","map","post","React","withRouter","Blog","state","markdown","fetch","then","response","text","setState","catch","err","console","error","align","react_markdown_default","escapeHtml","ReactDOM","render","BrowserRouter","Switch","Route","exact","component","src_Blog_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.317da68b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const Posts = [\n    {\n        path: \"/readme\",\n        title: \"README\",\n        date: \"02/21/2019\",\n        source: require('./posts/README.md'),\n        summary: \"This is a gh-pages document.\"\n    },\n    {\n        path: \"/landscape-image-clustering\",\n        title: \"Landscape Image Clustering based on Color Histogram\",\n        date: \"September 16, 2018\",\n        source: require('./posts/Landscape-Image-Clustering.md'),\n        summary: \"Clustering the landscape images by their colors.\"\n    }\n]\n\nexport default Posts","import React from 'react'\nimport Posts from './Posts.js'\nimport './Home.css'\nimport {withRouter} from \"react-router-dom\";\n\nclass Home extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.renderBlog = this.renderBlog.bind(this)\n    }\n\n    renderBlog(path, title, date, summary) {\n        return <div className=\"container\">\n            <h5><a onClick={\n                () => this.props.history.push(path)}> {title}</a>\n                <span class=\"badge badge-info\" id=\"date-badge\">{date}</span></h5>\n            <hr/>\n            <p>{summary}</p>\n        </div>\n    }\n\n    render() {\n        return <div>\n            <div className=\"jumbotron\">\n                <div className=\"container\">\n                    <h3>何燕杰的博客 (Yanjie He's Blog)</h3>\n                    <p>\n                        Good things come to those who keep moving forward.\n                    </p>\n                </div>\n            </div>\n            {\n                Posts.map(\n                    post =>\n                        this.renderBlog(post.path, post.title, post.date, post.summary)\n                )\n            }\n        </div>\n    }\n}\n\nexport default withRouter(Home)","import React from 'react'\nimport Markdown from 'react-markdown'\nimport './Blog.css'\n\nclass Blog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            markdown: \"\",\n            source: props.source,\n            title: props.title,\n            date: props.date\n        }\n    }\n\n    componentDidMount() {\n        fetch(this.state.source)\n            .then(response => response.text())\n            .then(post => {\n                this.setState({markdown: post})\n            })\n            .catch((err) => console.error(err));\n    }\n\n    render() {\n        const post = this.state.markdown\n        return <div className=\"container\">\n            <h3 class=\"mt-4\" id=\"blog-text\">{this.state.title}</h3>\n            <p align=\"right\">Posted on {this.state.date}</p>\n            <div class=\"shadow p-3 mb-5 bg-white rounded\" id=\"blog-text\">\n                <Markdown source={post}\n                          escapeHtml={false}/>\n            </div>\n        </div>\n    }\n}\n\nexport default Blog","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home.js'\nimport './bootstrap.min.css'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Blog from './Blog.js'\nimport Posts from './Posts.js'\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" exact component={Home}></Route>\n            {\n                Posts.map(post =>\n                    <Route path={post.path} exact\n                           component={() => <Blog title={post.title} date={post.date} source={post.source}/>}></Route>\n                )\n            }\n        </Switch>\n    </BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/README.997ebcbd.md\";","module.exports = __webpack_public_path__ + \"static/media/Landscape-Image-Clustering.b47dfe32.md\";"],"sourceRoot":""}