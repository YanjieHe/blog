{"version":3,"sources":["serviceWorker.js","Posts.js","NavBar.js","BlogInfo.js","Home.js","Settings.js","Blog.js","Categories.js","Tags.js","About.js","index.js"],"names":["Boolean","window","location","hostname","match","Posts","path","fileName","title","date","category","tags","summary","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","createHashHistory","push","React","Component","BlogInfo","post","_this2","style","width","map","tag","io","Home","src_NavBar","src_BlogInfo","key","Settings","blogPrefix","Blog","markdown","url","fetch","then","response","text","setState","align","react_markdown_default","source","escapeHtml","collectCategories","categories","i","length","Categories","renderOneCategory","bind","assertThisInitialized","numOfPosts","_this3","paddingBottom","keys","collectTags","items","j","makeTagList","tagList","Tags","renderOneTag","handleInputChange","event","target","checked","onChange","htmlFor","About","ReactDOM","render","HashRouter","Switch","Route","exact","component","src_Blog_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b45a1b55.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const Posts = [\n    {\n        \"path\": \"/a-content-based-movie-recommender-system\",\n        \"fileName\": \"A-Content-based-Movie-Recommender-System.md\",\n        \"title\": \"A Content-based Movie Recommender System\",\n        \"date\": \"December 24, 2018\",\n        \"category\": \"Recommender System\",\n        \"tags\": [\"Recommender System\", \"Image Processing\", \"Audio Processing\", \"Social Network Analysis\"],\n        \"summary\": \"I built a content-based movie recommender system. The system only utilizing the content of movies themselves, which solves the cold-start problem. The challenge is how to extract meaningful information from the movies? \"\n    },\n    {\n        \"path\": \"/landscape-image-clustering\",\n        \"fileName\": \"Landscape-Image-Clustering.md\",\n        \"title\": \"Landscape Image Clustering based on Color Histogram\",\n        \"date\": \"September 16, 2018\",\n        \"category\": \"Image Processing\",\n        \"tags\": [\"Image Processing\", \"Clustering\"],\n        \"summary\": \"My original thought about this project is to cluster the landscape images by their colors. I developed a web crawler to download 8892 landscape photos from mob.org. \\nHowever, I ran up against difficulty in extracting the color features from the images.\"\n    },\n    {\n        \"path\": \"/text-co-occurrence-network\",\n        \"fileName\": \"Text-Co-occurrence-Network.md\",\n        \"title\": \"Text Co-occurrence Network Analysis for The Hunger Games\",\n        \"date\": \"September 08, 2018\",\n        \"category\": \"Natural Language Processing\",\n        \"tags\": [\"Natural Language Processing\", \"Social Network Analysis\"],\n        \"summary\": \"I am a fan of The Hunger Games, and I have read all the three books. The story of The Hunger Games is narrated by the young girl, Katniss Everdeen. There are many characters in the story, and what I am going to do is to describe the connections between the characters from a data science perspective.\"\n    }\n];\nexport default Posts;\n","import React from 'react'\nimport {createHashHistory} from 'history'\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: props.currentPage\n        }\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\"\n                        aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className={this.state.currentPage === \"Home\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\" onClick={() => createHashHistory().push(\"/\")}>Home <span\n                                className=\"sr-only\">(current)</span></span>\n                        </li>\n                        <li className={this.state.currentPage === \"Categories\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\"\n                                  onClick={() => createHashHistory().push(\"/categories\")}>Categories</span>\n                        </li>\n                        <li className={this.state.currentPage === \"Tags\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\"\n                                  onClick={() => createHashHistory().push(\"/tags\")}>Tags</span>\n                        </li>\n                        <li className={this.state.currentPage === \"About\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\"\n                                  onClick={() => createHashHistory().push(\"/about\")}>About</span>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default NavBar","import React from 'react'\nimport {IoIosPricetag} from 'react-icons/io'\nimport {createHashHistory} from 'history'\n\nclass BlogInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            path: props.post.path,\n            title: props.post.title,\n            date: props.post.date,\n            summary: props.post.summary,\n            tags: props.post.tags\n        }\n    }\n\n    render() {\n        return <div className=\"shadow p-3 mb-5 bg-white rounded\" style={{\"width\": \"100%\"}}>\n            <h5>\n                <span onClick={() => createHashHistory().push(this.state.path)}>\n                    {this.state.title}\n                </span>\n                <span className=\"badge badge-info\" id=\"date-badge\">{this.state.date}</span></h5>\n            <hr/>\n            <p>{this.state.summary}</p>\n            <p>{this.state.tags.map(tag => <small><IoIosPricetag/>{tag}&nbsp;&nbsp;</small>)}                </p>\n        </div>\n    }\n}\n\nexport default BlogInfo","import React from 'react'\nimport Posts from './Posts.js'\nimport './Home.css'\nimport NavBar from './NavBar.js'\nimport BlogInfo from './BlogInfo.js'\n\nclass Home extends React.Component {\n    render() {\n        return <div>\n            <NavBar currentPage=\"Home\"/>\n            {Posts.map(post => <BlogInfo key={post.path} post={post}/>)}\n        </div>\n    }\n}\n\nexport default Home","const Settings = {\n    blogPrefix: \"https://raw.githubusercontent.com/YanjieHe/blog/master/posts/\"\n};\n\nexport default Settings;","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport './Blog.css'\nimport NavBar from \"./NavBar.js\";\nimport Settings from './Settings.js'\n\n\nclass Blog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            markdown: \"\",\n            title: props.post.title,\n            date: props.post.date,\n            fileName: props.post.fileName\n        }\n    }\n\n    componentDidMount() {\n        const url = Settings.blogPrefix + this.state.fileName\n        fetch(url)\n            .then(response => response.text())\n            .then(\n                text => this.setState({markdown: text})\n            )\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Home\"/>\n            <div className=\"shadow p-3 mb-5 bg-white rounded\">\n                <h3 className=\"mt-4\">{this.state.title}</h3>\n                <p align=\"right\">Posted on {this.state.date}</p>\n                <ReactMarkdown source={this.state.markdown}\n                               escapeHtml={false}/>\n            </div>\n        </div>\n    }\n}\n\nexport default Blog","import React from 'react'\nimport NavBar from './NavBar.js'\nimport Posts from \"./Posts\";\nimport BlogInfo from './BlogInfo.js'\n\nfunction collectCategories() {\n    var categories = {}\n    for (var i = 0; i < Posts.length; i++) {\n        var category = Posts[i].category\n        if (category in categories) {\n            categories[category] += 1\n        } else {\n            categories[category] = 1\n        }\n    }\n    return categories\n}\n\nclass Categories extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderOneCategory = this.renderOneCategory.bind(this)\n        this.state = {\n            categories: collectCategories(),\n            category: \"\"\n        }\n    }\n\n\n    renderOneCategory(category, numOfPosts) {\n        return <li key={category} className={\n            category === this.state.category\n                ? \"list-group-item d-flex justify-content-between align-items-center active\"\n                : \"list-group-item d-flex justify-content-between align-items-center\"\n        }\n                   onClick={\n                       () => this.setState({category: category})\n                   }>\n            {category}\n            <span className={\n                category === this.state.category\n                    ? \"badge badge-light badge-pill\"\n                    : \"badge badge-primary badge-pill\"}>{numOfPosts}</span>\n        </li>\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Categories\"/>\n            <div className=\"row\">\n                <div className=\"col-xs-10 col-sm-3\" style={{\"paddingBottom\": \"50px\"}}>\n                    <ul className=\"list-group\">\n                        {Object.keys(this.state.categories)\n                            .map(category =>\n                                this.renderOneCategory(category, this.state.categories[category]))}\n                    </ul>\n                </div>\n                <div className=\"col-xs-10 col-sm-9\">\n                    {Posts.map(post => {\n                        if (this.state.category === \"\") {\n                            return <BlogInfo key={post.path} post={post}/>\n                        } else if (this.state.category === post.category) {\n                            return <BlogInfo key={post.path} post={post}/>\n                        } else {\n                            return <span></span>\n                        }\n                    })}\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default Categories","import React from 'react'\nimport NavBar from \"./NavBar.js\";\nimport Posts from \"./Posts.js\";\nimport BlogInfo from './BlogInfo.js'\nimport {createHashHistory} from 'history'\n\nfunction collectTags() {\n    var tags = {}\n    for (var i = 0; i < Posts.length; i++) {\n        var items = Posts[i].tags\n        for (var j = 0; j < items.length; j++) {\n            var tag = items[j]\n            if (tag in tags) {\n                tags[tag] += 1\n            } else {\n                tags[tag] = 1\n            }\n        }\n    }\n    return tags\n}\n\nfunction makeTagList(tags) {\n    var tagList = {}\n    var keys = Object.keys(tags)\n    for (var i = 0; i < keys.length; i++) {\n        var tag = keys[i]\n        tagList[tag] = false\n    }\n    return tagList\n}\n\nclass Tags extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderOneTag = this.renderOneTag.bind(this)\n        this.handleInputChange = this.handleInputChange.bind(this)\n        this.state = {\n            tags: collectTags(),\n            tagList: makeTagList(collectTags()),\n            tag: \"\"\n        }\n    }\n\n    handleInputChange(event, tag) {\n        const tagList = this.state.tagList\n        tagList[tag] = event.target.checked\n        this.setState({tagList: tagList});\n    }\n\n    renderOneTag(tag, numOfPosts) {\n        return <div className=\"custom-control custom-checkbox\" key={tag}>\n            <input type=\"checkbox\"\n                   className=\"custom-control-input\"\n                   id={tag}\n                   checked={this.state.tagList[tag]}\n                   key={tag}\n                   onChange={(event) => this.handleInputChange(event, tag)}/>\n            <label className=\"custom-control-label\" htmlFor={tag}>{tag} </label>\n        </div>\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Tags\"/>\n            <div className=\"row\">\n                <div className=\"col-xs-10 col-sm-3\" style={{\"paddingBottom\": \"50px\"}}>\n                    <div className=\"form-group\">\n                        {Object.keys(this.state.tags)\n                            .map(tag =>\n                                this.renderOneTag(tag, this.state.tags[tag]))}\n                    </div>\n                </div>\n                <div className=\"col-xs-10 col-sm-9\">\n                    {Posts.map(post => {\n                        var items = post.tags\n                        for (var i = 0; i < items.length; i++) {\n                            if (this.state.tagList[items[i]]) {\n                                return <BlogInfo key={post.path} post={post}/>\n                            }\n                        }\n                        return <span key={post.path}></span>\n                    })}\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default Tags","import React from 'react'\nimport NavBar from './NavBar.js'\n\nclass About extends React.Component {\n    render() {\n        return (\n            <div>\n                <NavBar currentPage=\"About\"/>\n                <h3>Welcome to my website!</h3>\n                <br/>\n                <p>I am Yanjie He, a Data Scientist who is interested in computer science, statistics, and economics.\n                    Currently, I am studying at the Data Analytics program at the George Washington University.</p>\n\n                <p>I have experience in both academic and industry. My first internship is in Kantar Media CIC, which is\n                    a\n                    company focusing on social media data analysis. That experience was super fun. I developed a text\n                    mining\n                    system with team members and designed a sentimental analysis solution. Also, I provided a data\n                    visualization solution, which is to plot a Venn graph automatically based on given data.</p>\n\n                <p>After I came to the United States, I got an on-campus job in the George Washington University. I am\n                    working as a computational social scientist, and what I do in every week is to help Professor\n                    Pamphile\n                    with her research work. It is an excellent opportunity for me to apply my analytical skills to solve\n                    academic problems.</p>\n\n                <p>I am a team member in Professor Benjamin Harvey's A.I. project. I am developing a recommender system\n                    with the joint effort of team members. From this experience, I learned the process of system\n                    development. There are still a lot learn, and it will be inspiring to me.</p>\n            </div>\n        );\n    }\n}\n\nexport default About","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home.js'\nimport \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport './bootstrap.css'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport Blog from './Blog.js'\nimport Posts from './Posts.js'\nimport Categories from \"./Categories.js\";\nimport Tags from './Tags.js'\nimport About from './About.js'\n\nReactDOM.render(\n    <HashRouter>\n        <Switch>\n            <Route key=\"/\" path={\"/\"} exact component={Home}/>\n            <Route key=\"/categories\" path={\"/categories\"} exact component={Categories}/>\n            <Route key=\"/tags\" path={\"/tags\"} exact component={Tags}/>\n            <Route key=\"/about\" path={\"/about\"} exact component={About}/>\n            {\n                Posts.map(post => <Route key={post.path} path={post.path} exact\n                                         component={() => <Blog post={post}/>}/>)\n            }\n        </Switch>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}