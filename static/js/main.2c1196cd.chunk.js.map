{"version":3,"sources":["serviceWorker.js","Posts.js","NavBar.js","BlogInfo.js","Home.js","Settings.js","Blog.js","Categories.js","Tags.js","index.js"],"names":["Boolean","window","location","hostname","match","Posts","path","fileName","title","date","category","tags","summary","NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentPage","react_default","a","createElement","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","createHashHistory","push","React","Component","BlogInfo","post","_this2","style","width","Home","src_NavBar","map","src_BlogInfo","key","Settings","blogPrefix","Blog","markdown","url","fetch","then","response","text","setState","align","react_markdown_default","source","escapeHtml","collectCategories","categories","i","length","Categories","renderOneCategory","bind","assertThisInitialized","numOfPosts","_this3","paddingBottom","keys","collectTags","items","split","j","tag","Tags","renderOneTag","indexOf","ReactDOM","render","HashRouter","Switch","Route","exact","component","src_Blog_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c1196cd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const Posts = [\n    {\n        \"path\": \"/landscape-image-clustering\",\n        \"fileName\": \"Landscape-Image-Clustering.md\",\n        \"title\": \"Landscape Image Clustering based on Color Histogram\",\n        \"date\": \"September 16, 2018\",\n        \"category\": \"Image Processing\",\n        \"tags\": \"Computer Science|Clustering\",\n        \"summary\": \"My original thought about this project is to cluster the landscape images by their colors. I developed a web crawler to download 8892 landscape photos from mob.org. \\nHowever, I ran up against difficulty in extracting the color features from the images.\"\n    },\n    {\n        \"path\": \"/text-co-occurrence-network\",\n        \"fileName\": \"Text-Co-occurrence-Network.md\",\n        \"title\": \"Text Co-occurrence Network Analysis for The Hunger Games\",\n        \"date\": \"September 08, 2018\",\n        \"category\": \"Natural Language Processing\",\n        \"tags\": \"Social Network Analysis|Gephi\",\n        \"summary\": \"I am a fan of The Hunger Games, and I have read all the three books. The story of The Hunger Games is narrated by the young girl, Katniss Everdeen. There are many characters in the story, and what I am going to do is to describe the connections between the characters from a data science perspective.\"\n    }\n];\nexport default Posts;\n","import React from 'react'\nimport {createHashHistory} from 'history'\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentPage: props.currentPage\n        }\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor03\"\n                        aria-controls=\"navbarColor03\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className={this.state.currentPage === \"Home\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\" onClick={() => createHashHistory().push(\"/\")}>Home <span\n                                className=\"sr-only\">(current)</span></span>\n                        </li>\n                        <li className={this.state.currentPage === \"Categories\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\"\n                                  onClick={() => createHashHistory().push(\"/categories\")}>Categories</span>\n                        </li>\n                        <li className={this.state.currentPage === \"Tags\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\"\n                                  onClick={() => createHashHistory().push(\"/tags\")}>Tags</span>\n                        </li>\n                        <li className={this.state.currentPage === \"About\" ? \"nav-item active\" : \"nav-item\"}>\n                            <span className=\"nav-link\"\n                                  onClick={() => createHashHistory().push(\"/about\")}>About</span>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default NavBar","import React from 'react'\nimport {createHashHistory} from 'history'\n\nclass BlogInfo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            path: props.post.path,\n            title: props.post.title,\n            date: props.post.date,\n            summary: props.post.summary\n        }\n    }\n\n    render() {\n        return <div className=\"shadow p-3 mb-5 bg-white rounded\" style={{\"width\": \"100%\"}}>\n            <h5>\n                <span onClick={() => createHashHistory().push(this.state.path)}>\n                    {this.state.title}\n                </span>\n                <span className=\"badge badge-info\" id=\"date-badge\">{this.state.date}</span></h5>\n            <hr/>\n            <p>{this.state.summary}</p>\n        </div>\n    }\n}\n\nexport default BlogInfo","import React from 'react'\nimport Posts from './Posts.js'\nimport './Home.css'\nimport NavBar from './NavBar.js'\nimport BlogInfo from './BlogInfo.js'\n\nclass Home extends React.Component {\n    render() {\n        return <div>\n            <NavBar currentPage=\"Home\"/>\n            {Posts.map(post => <BlogInfo key={post.path} post={post}/>)}\n        </div>\n    }\n}\n\nexport default Home","const Settings = {\n    blogPrefix: \"https://raw.githubusercontent.com/YanjieHe/blog/master/posts/\"\n};\n\nexport default Settings;","import React from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport './Blog.css'\nimport NavBar from \"./NavBar.js\";\nimport Settings from './Settings.js'\n\n\nclass Blog extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            markdown: \"\",\n            title: props.post.title,\n            date: props.post.date,\n            fileName: props.post.fileName\n        }\n    }\n\n    componentDidMount() {\n        const url = Settings.blogPrefix + this.state.fileName\n        fetch(url)\n            .then(response => response.text())\n            .then(\n                text => this.setState({markdown: text})\n            )\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Home\"/>\n            <div className=\"shadow p-3 mb-5 bg-white rounded\">\n                <h3 className=\"mt-4\">{this.state.title}</h3>\n                <p align=\"right\">Posted on {this.state.date}</p>\n                <ReactMarkdown source={this.state.markdown}\n                               escapeHtml={false}/>\n            </div>\n        </div>\n    }\n}\n\nexport default Blog","import React from 'react'\nimport NavBar from './NavBar.js'\nimport Posts from \"./Posts\";\nimport BlogInfo from './BlogInfo.js'\n\nfunction collectCategories() {\n    var categories = {}\n    for (var i = 0; i < Posts.length; i++) {\n        var category = Posts[i].category\n        if (category in categories) {\n            categories[category] += 1\n        } else {\n            categories[category] = 1\n        }\n    }\n    return categories\n}\n\nclass Categories extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderOneCategory = this.renderOneCategory.bind(this)\n        this.state = {\n            categories: collectCategories(),\n            category: \"\"\n        }\n    }\n\n\n    renderOneCategory(category, numOfPosts) {\n        return <li key={category} className=\"list-group-item d-flex justify-content-between align-items-center\"\n                   onClick={\n                       () => this.setState({category: category})\n                   }>\n            {category}\n            <span className=\"badge badge-primary badge-pill\">{numOfPosts}</span>\n        </li>\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Categories\"/>\n            <div className=\"row\">\n                <div className=\"col-xs-10 col-sm-3\" style={{\"paddingBottom\": \"50px\"}}>\n                    <ul className=\"list-group\">\n                        {Object.keys(this.state.categories)\n                            .map(category =>\n                                this.renderOneCategory(category, this.state.categories[category]))}\n                    </ul>\n                </div>\n                <div className=\"col-xs-10 col-sm-7\">\n                    {Posts.map(post => {\n                        if (this.state.category === \"\") {\n                            return <BlogInfo key={post.path} post={post}/>\n                        } else if (this.state.category === post.category) {\n                            return <BlogInfo key={post.path} post={post}/>\n                        } else {\n                            return <span></span>\n                        }\n                    })}\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default Categories","import React from 'react'\nimport NavBar from \"./NavBar.js\";\nimport Posts from \"./Posts.js\";\nimport BlogInfo from './BlogInfo.js'\n\nfunction collectTags() {\n    var tags = {}\n    for (var i = 0; i < Posts.length; i++) {\n        var items = Posts[i].tags.split(\"|\")\n        for (var j = 0; j < items.length; j++) {\n            var tag = items[j]\n            if (tag in tags) {\n                tags[tag] += 1\n            } else {\n                tags[tag] = 1\n            }\n        }\n    }\n    return tags\n}\n\nclass Tags extends React.Component {\n    constructor(props) {\n        super(props);\n        this.renderOneTag = this.renderOneTag.bind(this)\n        this.state = {\n            tags: collectTags(),\n            tag: \"\"\n        }\n    }\n\n\n    renderOneTag(tag, numOfPosts) {\n        return <li key={tag} className=\"list-group-item d-flex justify-content-between align-items-center\"\n                   onClick={\n                       () => this.setState({tag: tag})\n                   }>\n            {tag}\n            <span className=\"badge badge-primary badge-pill\">{numOfPosts}</span>\n        </li>\n    }\n\n    render() {\n        return <div>\n            <NavBar currentPage=\"Tags\"/>\n            <div className=\"row\">\n                <div className=\"col-xs-10 col-sm-3\" style={{\"paddingBottom\": \"50px\"}}>\n                    <ul className=\"list-group\">\n                        {Object.keys(this.state.tags)\n                            .map(tag =>\n                                this.renderOneTag(tag, this.state.tags[tag]))}\n                    </ul>\n                </div>\n                <div className=\"col-xs-10 col-sm-7\">\n                    {Posts.map(post => {\n                        if (this.state.tag === \"\") {\n                            return <BlogInfo key={post.path} post={post}/>\n                        } else if (post.tags.split(\"|\").indexOf(this.state.tag) >= 0) {\n                            return <BlogInfo key={post.path} post={post}/>\n                        } else {\n                            return <span></span>\n                        }\n                    })}\n                </div>\n            </div>\n        </div>\n    }\n}\n\nexport default Tags","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Home from './Home.js'\nimport \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport './bootstrap.css'\nimport {HashRouter, Route, Switch} from 'react-router-dom'\nimport Blog from './Blog.js'\nimport Posts from './Posts.js'\nimport Categories from \"./Categories.js\";\nimport Tags from './Tags.js'\n\nReactDOM.render(\n    <HashRouter>\n        <Switch>\n            <Route key=\"/\" path={\"/\"} exact component={Home}/>\n            <Route key=\"/categories\" path={\"/categories\"} exact component={Categories}/>\n            <Route key=\"/tags\" path={\"/tags\"} exact component={Tags}/>\n            {\n                Posts.map(post => <Route key={post.path} path={post.path} exact\n                                         component={() => <Blog post={post}/>}/>)\n            }\n        </Switch>\n    </HashRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}